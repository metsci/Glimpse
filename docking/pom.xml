<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.metsci.glimpse</groupId>
        <artifactId>glimpse-parent</artifactId>
        <version>CURRENT-SNAPSHOT</version>
    </parent>

    <artifactId>glimpse-docking</artifactId>

    <dependencies>

        <dependency>
            <groupId>com.metsci.glimpse</groupId>
            <artifactId>glimpse-util</artifactId>
            <version>${project.parent.version}</version>
        </dependency>

        <dependency>
            <groupId>com.metsci.glimpse</groupId>
            <artifactId>glimpse-extras-tinylaf</artifactId>
            <version>${project.parent.version}</version>
        </dependency>

        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>2.3.2</version>
        </dependency>

        <!--
         When glimpse-docking is used as a NON-module, this dependency declaration is all
         that is needed, in order for the jaxb-runtime impl to be found at runtime.

         When glimpse-docking is used as a module, the jaxb-runtime jar referred to here
         needs to be on the modulepath (NOT the classpath) at runtime! (If your tools choose
         automatically which deps go on the modulepath/classpath, you should DOUBLE-CHECK
         that they are choosing correctly in this case.) To make everything more complicated,
         if the jaxb-runtime jar is placed (incorrectly) on the classpath, it will still work
         ... usually, but NOT ALWAYS! It depends on the context-classloader of the thread on
         which the JAXBContext gets created.
         -->
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>2.3.2</version>
            <scope>runtime</scope>
        </dependency>

    </dependencies>

</project>

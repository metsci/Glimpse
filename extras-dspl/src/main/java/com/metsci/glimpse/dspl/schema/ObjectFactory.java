/*
 * Copyright (c) 2019, Metron, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Metron, Inc. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL METRON, INC. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.3-hudson-jaxb-ri-2.2.3-3-
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2011.12.05 at 11:09:09 AM EST
//

package com.metsci.glimpse.dspl.schema;

import javax.xml.bind.annotation.XmlRegistry;

/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the com.metsci.glimpse.support.dspl.schema package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 *
 */
@XmlRegistry
public class ObjectFactory
{

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.metsci.glimpse.support.dspl.schema
     *
     */
    public ObjectFactory( )
    {
    }

    /**
     * Create an instance of {@link Attribute }
     *
     */
    public Attribute createAttribute( )
    {
        return new Attribute( );
    }

    /**
     * Create an instance of {@link ConceptProperty }
     *
     */
    public ConceptProperty createConceptProperty( )
    {
        return new ConceptProperty( );
    }

    /**
     * Create an instance of {@link com.metsci.glimpse.dspl.schema.Data }
     *
     */
    public com.metsci.glimpse.dspl.schema.Data createData( )
    {
        return new com.metsci.glimpse.dspl.schema.Data( );
    }

    /**
     * Create an instance of {@link Slice }
     *
     */
    public Slice createSlice( )
    {
        return new Slice( );
    }

    /**
     * Create an instance of {@link Table }
     *
     */
    public Table createTable( )
    {
        return new Table( );
    }

    /**
     * Create an instance of {@link Concept }
     *
     */
    public Concept createConcept( )
    {
        return new Concept( );
    }

    /**
     * Create an instance of {@link SliceTableMapping }
     *
     */
    public SliceTableMapping createSliceTableMapping( )
    {
        return new SliceTableMapping( );
    }

    /**
     * Create an instance of {@link ConceptTableMapping }
     *
     */
    public ConceptTableMapping createConceptTableMapping( )
    {
        return new ConceptTableMapping( );
    }

    /**
     * Create an instance of {@link ConceptInfo }
     *
     */
    public ConceptInfo createConceptInfo( )
    {
        return new ConceptInfo( );
    }

    /**
     * Create an instance of {@link DataSet }
     *
     */
    public DataSet createDataSet( )
    {
        return new DataSet( );
    }

    /**
     * Create an instance of {@link Values }
     *
     */
    public Values createValues( )
    {
        return new Values( );
    }

    /**
     * Create an instance of {@link SliceConceptRef }
     *
     */
    public SliceConceptRef createSliceConceptRef( )
    {
        return new SliceConceptRef( );
    }

    /**
     * Create an instance of {@link Value }
     *
     */
    public Value createValue( )
    {
        return new Value( );
    }

    /**
     * Create an instance of {@link com.metsci.glimpse.dspl.schema.Topic }
     *
     */
    public com.metsci.glimpse.dspl.schema.Topic createTopic( )
    {
        return new com.metsci.glimpse.dspl.schema.Topic( );
    }

    /**
     * Create an instance of {@link Info }
     *
     */
    public Info createInfo( )
    {
        return new Info( );
    }

    /**
     * Create an instance of {@link Attribute.Type }
     *
     */
    public Attribute.Type createAttributeType( )
    {
        return new Attribute.Type( );
    }

    /**
     * Create an instance of {@link Attribute.ConceptValue }
     *
     */
    public Attribute.ConceptValue createAttributeConceptValue( )
    {
        return new Attribute.ConceptValue( );
    }

    /**
     * Create an instance of {@link ConceptProperty.Type }
     *
     */
    public ConceptProperty.Type createConceptPropertyType( )
    {
        return new ConceptProperty.Type( );
    }

    /**
     * Create an instance of {@link com.metsci.glimpse.dspl.schema.Data.File }
     *
     */
    public com.metsci.glimpse.dspl.schema.Data.File createDataFile( )
    {
        return new com.metsci.glimpse.dspl.schema.Data.File( );
    }

    /**
     * Create an instance of {@link Slice.Data }
     *
     */
    public Slice.Data createSliceData( )
    {
        return new Slice.Data( );
    }

    /**
     * Create an instance of {@link Table.Column }
     *
     */
    public Table.Column createTableColumn( )
    {
        return new Table.Column( );
    }

    /**
     * Create an instance of {@link Concept.Topic }
     *
     */
    public Concept.Topic createConceptTopic( )
    {
        return new Concept.Topic( );
    }

    /**
     * Create an instance of {@link Concept.Type }
     *
     */
    public Concept.Type createConceptType( )
    {
        return new Concept.Type( );
    }

    /**
     * Create an instance of {@link Concept.Data }
     *
     */
    public Concept.Data createConceptData( )
    {
        return new Concept.Data( );
    }

    /**
     * Create an instance of {@link SliceTableMapping.MapDimension }
     *
     */
    public SliceTableMapping.MapDimension createSliceTableMappingMapDimension( )
    {
        return new SliceTableMapping.MapDimension( );
    }

    /**
     * Create an instance of {@link SliceTableMapping.MapMetric }
     *
     */
    public SliceTableMapping.MapMetric createSliceTableMappingMapMetric( )
    {
        return new SliceTableMapping.MapMetric( );
    }

    /**
     * Create an instance of {@link ConceptTableMapping.MapConcept }
     *
     */
    public ConceptTableMapping.MapConcept createConceptTableMappingMapConcept( )
    {
        return new ConceptTableMapping.MapConcept( );
    }

    /**
     * Create an instance of {@link ConceptTableMapping.MapProperty }
     *
     */
    public ConceptTableMapping.MapProperty createConceptTableMappingMapProperty( )
    {
        return new ConceptTableMapping.MapProperty( );
    }

    /**
     * Create an instance of {@link ConceptInfo.Synonym }
     *
     */
    public ConceptInfo.Synonym createConceptInfoSynonym( )
    {
        return new ConceptInfo.Synonym( );
    }

    /**
     * Create an instance of {@link DataSet.Import }
     *
     */
    public DataSet.Import createDataSetImport( )
    {
        return new DataSet.Import( );
    }

    /**
     * Create an instance of {@link DataSet.Topics }
     *
     */
    public DataSet.Topics createDataSetTopics( )
    {
        return new DataSet.Topics( );
    }

    /**
     * Create an instance of {@link DataSet.Concepts }
     *
     */
    public DataSet.Concepts createDataSetConcepts( )
    {
        return new DataSet.Concepts( );
    }

    /**
     * Create an instance of {@link DataSet.Slices }
     *
     */
    public DataSet.Slices createDataSetSlices( )
    {
        return new DataSet.Slices( );
    }

    /**
     * Create an instance of {@link DataSet.Tables }
     *
     */
    public DataSet.Tables createDataSetTables( )
    {
        return new DataSet.Tables( );
    }

}
